AWSTemplateFormatVersion: 2010-09-09
Description: >
  Analyze videos from different sites and tag these videos.
Parameters:
  Prefix:
    Default: 'poc'
    Type: String
    Description: >
      Resource name in this template should be prefixed with this word
  BasicStack:
    Default: stack-vpc
    Type: String
    Description: >
      Stack name of VPC used to deploy the following infrastructure.
  ImagePipelineStack:
    Default: stack-image-builder
    Type: String
    Description: >
      Stack name of Image Builder.
  AsgMinCapacity:
    Default: 0
    Type: Number
    Description: >
      Stack name of VPC used to deploy the following infrastructure.
  AsgMaxCapacity:
    Default: 0
    Type: Number
    Description: >
      Stack name of VPC used to deploy the following infrastructure.
  AsgDesiredCapacity:
    Default: 0
    Type: Number
    Description: >
      Stack name of VPC used to deploy the following infrastructure.
  KinesisStreamName:
    Default: stream
    Type: String
    Description: >
      Stack name of Image Builder.
Resources:
  FluentBitAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 1
        MinInstancesInService: 1
    Properties:
      AutoScalingGroupName: !Join ['-', [!Ref Prefix, 'fluentbit']]
      MinSize: !Ref AsgMinCapacity
      MaxSize: !Ref AsgMaxCapacity
      DesiredCapacity: !Ref AsgDesiredCapacity
      Cooldown: 240
      HealthCheckGracePeriod: 180
      HealthCheckType: 'ELB'
      TerminationPolicies:
        - 'OldestLaunchTemplate'
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub '${BasicStack}-SubnetC'
        - Fn::ImportValue:
            !Sub '${BasicStack}-SubnetD'
      TargetGroupARNs: 
        - Fn::ImportValue: !Sub '${ImagePipelineStack}-FluentBitTargetGroup'
      LaunchTemplate:
        LaunchTemplateId:
          Fn::ImportValue: !Sub '${ImagePipelineStack}-FluentBitLT'
        Version:
          Fn::ImportValue: !Sub '${ImagePipelineStack}-FluentBitLTLatestVersion'
  FluentBitAsgPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref FluentBitAsg
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60
  MyNLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: 'rg-test-nlb'
      IpAddressType: 'ipv4'
      Scheme: 'internet-facing'
      Subnets:
        - Fn::ImportValue:
            !Sub '${BasicStack}-SubnetA'
        - Fn::ImportValue:
            !Sub '${BasicStack}-SubnetB'
      Type: 'network'
  HTTPlistener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: "forward"
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn:
                  Fn::ImportValue: !Sub '${ImagePipelineStack}-FluentBitTargetGroup'
      LoadBalancerArn: !Ref MyNLB
      Port: 8080
      Protocol: "TCP"
  MyStream: 
      Type: AWS::Kinesis::Stream 
      Properties: 
          Name: !Ref KinesisStreamName 
          RetentionPeriodHours: 24
          ShardCount: 1
